/** Declaration file generated by dts-gen */

declare module "color" {

    export class color {
        constructor(obj: any, model?: any);

        a(val: any, ...args: any[]): any;

        alpha(val: any, ...args: any[]): any;

        ansi16(...args: any[]): any;

        ansi256(...args: any[]): any;

        apple(...args: any[]): any;

        array(): any;

        b(val: any, ...args: any[]): any;

        black(val: any, ...args: any[]): any;

        blacken(ratio: any): any;

        blue(val: any, ...args: any[]): any;

        chroma(val: any, ...args: any[]): any;

        cmyk(...args: any[]): any;

        contrast(color2: any): any;

        cyan(val: any, ...args: any[]): any;

        darken(ratio: any): any;

        desaturate(ratio: any): any;

        fade(ratio: any): any;

        gray(val: any, ...args: any[]): any;

        grayscale(): any;

        green(val: any, ...args: any[]): any;

        hcg(...args: any[]): any;

        hex(val: any, ...args: any[]): any;

        hsl(...args: any[]): any;

        hsv(...args: any[]): any;

        hue(val: any, ...args: any[]): any;

        hwb(...args: any[]): any;

        isDark(): any;

        isLight(): any;

        keyword(val: any, ...args: any[]): any;

        l(val: any, ...args: any[]): any;

        lab(...args: any[]): any;

        lch(...args: any[]): any;

        level(color2: any): any;

        lighten(ratio: any): any;

        lightness(val: any, ...args: any[]): any;

        luminosity(): any;

        magenta(val: any, ...args: any[]): any;

        mix(mixinColor: any, weight: any): any;

        negate(): any;

        object(): any;

        opaquer(ratio: any): any;

        percentString(places: any): any;

        red(val: any, ...args: any[]): any;

        rgb(...args: any[]): any;

        rgbNumber(): any;

        rotate(degrees: any): any;

        round(places: any): any;

        saturate(ratio: any): any;

        saturationl(val: any, ...args: any[]): any;

        saturationv(val: any, ...args: any[]): any;

        string(places: any): any;

        toJSON(): any;

        toString(): any;

        unitArray(): any;

        unitObject(): any;

        value(val: any, ...args: any[]): any;

        wblack(val: any, ...args: any[]): any;

        white(val: any, ...args: any[]): any;

        whiten(ratio: any): any;

        x(val: any, ...args: any[]): any;

        xyz(...args: any[]): any;

        y(val: any, ...args: any[]): any;

        yellow(val: any, ...args: any[]): any;

        z(val: any, ...args: any[]): any;

        static ansi16(color: any, ...args: any[]): any;

        static ansi256(color: any, ...args: any[]): any;

        static apple(color: any, ...args: any[]): any;

        static cmyk(color: any, ...args: any[]): any;

        static hcg(color: any, ...args: any[]): any;

        static hsl(color: any, ...args: any[]): any;

        static hsv(color: any, ...args: any[]): any;

        static hwb(color: any, ...args: any[]): any;

        static lab(color: any, ...args: any[]): any;

        static lch(color: any, ...args: any[]): any;

        static rgb(color: any, ...args: any[]): any;

        static xyz(color: any, ...args: any[]): any;

    }

    export default color;
}
